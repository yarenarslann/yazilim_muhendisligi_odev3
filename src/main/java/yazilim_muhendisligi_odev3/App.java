/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package yazilim_muhendisligi_odev3;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
public class App {
    public String getGreeting() {
        return "Hello world.";

    }

    public static void main(String[] args) {
        
        
        System.out.println(new App().getGreeting());
        Logger logger=LogManager.getLogger(App.class);
        logger.error("hello world");

        int port =Integer.parseInt(System.getenv("PORT"));
        port(port);
        logger.error("Current  port number:"+ port);

        

        get("/", (req, res) -> "Yazilim Muhendisligi 3. odev");

        get("/compute",
        (rq, rs) -> {
             Map<String, String> map = new HashMap<String, String>();
             map.put("result", "not computed yet!");
             return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine()
        );

        post("/compute", (req, res) -> {
            //System.out.println(req.queryParams("input1"));
            //System.out.println(req.queryParams("input2"));
            String input1 = req.queryParams("input1");
            java.util.Scanner sc1 = new java.util.Scanner(input1);
            sc1.useDelimiter("[;\r\n]+");
            java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
            while (sc1.hasNext())
            {
            int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
            inputList.add(value);
            }
            sc1.close();
            System.out.println(inputList);
            String input2 = req.queryParams("input2").replaceAll("\\s","");
            int input2AsInt = Integer.parseInt(input2);
            String input3 = req.queryParams("input3").replaceAll("\\s","");
            int input3AsInt = Integer.parseInt(input3);
            String input4 = req.queryParams("input4").replaceAll("\\s","");
            int input4AsInt = Integer.parseInt(input4);

            boolean result = App.Hesaplama(inputList, input2AsInt,input3AsInt,input4AsInt);


            Map<String, Boolean> map = new HashMap<String, Boolean>();
            map.put("result", result);
            return new ModelAndView(map, "compute.mustache");

            },
            new MustacheTemplateEngine()
            );

    }


    public static boolean Hesaplama(ArrayList<Integer> array,int birler_bas, int onlar_bas, int yuzler_bas) {
        boolean sonuc=false;
        int olusan_sayi=0;
            if( 0<=birler_bas && birler_bas<10 && 0<=onlar_bas && onlar_bas<10 && 0<=yuzler_bas && yuzler_bas<10 ){
                olusan_sayi= (yuzler_bas*100) + (onlar_bas*10) + (birler_bas);
                for(int i=0; i<array.size();i++){
                    if(olusan_sayi==array.get(i)){
                        sonuc=true;
                    }
    
                }
    
            }
            return sonuc;
    
        }
}
